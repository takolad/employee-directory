{"version":3,"sources":["components/Container.js","components/Row.js","components/Col.js","components/Card.js","components/FilterForm.js","utils/API.js","components/EmployeeDetail.js","components/OmdbContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","className","fluid","children","Row","Col","size","split","map","join","Card","heading","filterResults","htmlFor","onChange","handleInputChange","value","name","type","placeholder","id","onClick","handleFormSubmit","sortAZ","sortZA","BASEURL","axios","get","EmployeeDetail","alt","first","last","src","style","margin","email","phone","cell","OmdbContainer","state","result","employees","filter","error","searchEmployees","API","then","res","setState","data","results","catch","err","console","log","filterByName","employee","includes","trim","event","target","preventDefault","sort","a","b","this","length","friend","picture","thumbnail","FilterForm","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23d93d6a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\n\n// This Col component offers us the convenience of being able to set a column's \"size\" prop instead of its className\n// We can also omit the col- at the start of each Bootstrap column class, e.g. size=\"md-12\" instead of className=\"col-md-12\"\n\nfunction Col(props) {\n  const size = props.size.split(\" \").map(size => \"col-\" + size).join(\" \");\n\n  return (\n    <div className={size}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card text-center\">\n      <div className=\"card-header\">\n        <h2>{props.heading}</h2>\n      </div>\n      <div className=\"card-body\">{props.children}</div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nfunction filterResults(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"filter\">Filter:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.value}\n          name=\"filter\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Filter By Name\"\n          id=\"filter\"\n        />\n        <br />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\n          Filter\n        </button>\n        <br />\n        <br />\n        <button className=\"btn btn-primary\" onClick={props.sortAZ}>\n          {\"A > Z\"}\n        </button>{\" \"}\n        <button className=\"btn btn-primary\" onClick={props.sortZA}>\n          {\"Z > A\"}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default filterResults;\n","import axios from \"axios\";\nconst employeeCount = 10;\nconst BASEURL = `https://randomuser.me/api/?results=${employeeCount}`;\n// exclude sensitive info\nconst exclude = \"&exc=login,gender,dob,location&nat=us&noinfo\";\n\nexport default {\n  search: function () {\n    return axios.get(BASEURL + exclude);\n  },\n};\n","import React from \"react\";\n\nfunction EmployeeDetail(props) {\n  return (\n    <div className=\"text-center border border-primary py-3\">\n      <img\n        alt={[props.first + \" \" + props.last]}\n        className=\"img-fluid\"\n        src={props.src}\n        key={props.email}\n        style={{ margin: \"0 auto\" }}\n      />\n      <h3>\n        Name: {props.first} {props.last}\n      </h3>\n      <h3>Email: {props.email}</h3>\n      <h3>Phone: {props.phone}</h3>\n      <h3>Cell: {props.cell}</h3>\n    </div>\n  );\n}\n\nexport default EmployeeDetail;\n","import React, { Component } from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Card from \"./Card\";\nimport FilterForm from \"./FilterForm\";\nimport API from \"../utils/API\";\nimport EmployeeDetail from \"./EmployeeDetail\";\n\nclass OmdbContainer extends Component {\n  state = {\n    result: [],\n    employees: [],\n    filter: \"\",\n    error: \"\",\n  };\n\n  componentDidMount() {\n    this.searchEmployees();\n  }\n\n  searchEmployees = () => {\n    API.search()\n      .then((res) => this.setState({ result: res.data.results }))\n      .catch((err) => console.log(err));\n  };\n\n  filterByName = (name) => {\n    const employee = this.state.result.filter((employee) => {\n      let empName = employee.name.first + \" \" + employee.name.last;\n      return empName.includes(name.trim());\n    });\n    this.setState({ employees: employee });\n  };\n\n  handleInputChange = (event) => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value,\n    });\n    this.filterByName(this.state.filter);\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    this.filterByName(this.state.filter);\n  };\n\n  sortAZ = (event) => {\n    event.preventDefault();\n    if (this.filter) {\n      this.setState({\n        employees: this.state.employees.sort((a, b) =>\n          a.name.last > b.name.last ? 1 : b.name.last > a.name.last ? -1 : 0\n        ),\n      });\n    } else {\n      this.setState({\n        result: this.state.result.sort((a, b) =>\n          a.name.last > b.name.last ? 1 : b.name.last > a.name.last ? -1 : 0\n        ),\n      });\n    }\n  };\n\n  sortZA = (event) => {\n    event.preventDefault();\n    if (this.filter) {\n      this.setState({\n        employees: this.state.employees.sort((a, b) =>\n          a.name.last < b.name.last ? 1 : b.name.last < a.name.last ? -1 : 0\n        ),\n      });\n    } else {\n      this.setState({\n        result: this.state.result.sort((a, b) =>\n          a.name.last < b.name.last ? 1 : b.name.last < a.name.last ? -1 : 0\n        ),\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col size=\"md-8\">\n            <Card heading={\"Employee Directory\"}>\n              {this.state.result ? (\n                this.state.filter.length < 1 ? (\n                  this.state.result.map((friend) => {\n                    return (\n                      <EmployeeDetail\n                        key={friend.email}\n                        first={friend.name.first}\n                        last={friend.name.last}\n                        src={friend.picture.thumbnail}\n                        email={friend.email}\n                        phone={friend.phone}\n                        cell={friend.cell}\n                      />\n                    );\n                  })\n                ) : (\n                  this.state.employees.map((friend) => {\n                    return (\n                      <EmployeeDetail\n                        key={friend.email}\n                        first={friend.name.first}\n                        last={friend.name.last}\n                        src={friend.picture.thumbnail}\n                        email={friend.email}\n                        phone={friend.phone}\n                        cell={friend.cell}\n                      />\n                    );\n                  })\n                )\n              ) : (\n                <h3>No Results to Display</h3>\n              )}\n            </Card>\n          </Col>\n          <Col size=\"md-4\">\n            <Card heading=\"Filter\">\n              <FilterForm\n                value={this.state.filter}\n                handleInputChange={this.handleInputChange}\n                handleFormSubmit={this.handleFormSubmit}\n                sortAZ={this.sortAZ}\n                sortZA={this.sortZA}\n              />\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default OmdbContainer;\n","import React from \"react\";\nimport OmdbContainer from \"./components/OmdbContainer\";\n\nfunction App() {\n  return <OmdbContainer />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}